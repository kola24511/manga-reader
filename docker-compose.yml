services:
    app:
        container_name: app
        build:
            context: .
            dockerfile: .docker/app/Dockerfile
        volumes:
            - .:/app
        ports:
            - "8000:8000"
        depends_on:
            pgsql:
                condition: service_healthy
        networks:
            - readmanga

    queue-runner:
        container_name: queue-runner
        build:
            context: .
            dockerfile: .docker/app/Dockerfile
        entrypoint: php artisan queue:work --tries=3 --timeout=90 --sleep=3 --daemon
        volumes:
            - .:/app
        depends_on:
            pgsql:
                condition: service_healthy
        networks:
            - readmanga

    pgsql:
        container_name: pgsql
        image: postgres:17-alpine
        restart: always
        ports:
            - 5432:5432
        volumes:
            - pgdata:/var/lib/postgresql/data
        environment:
            POSTGRES_PASSWORD: ${DB_PASSWORD}
            POSTGRES_DB: ${DB_DATABASE}
            POSTGRES_USER: ${DB_USERNAME}
        healthcheck:
            test: ["CMD-SHELL", "pg_isready -U ${DB_USERNAME:-postgres} -d ${DB_DATABASE:-postgres}"]
            interval: 1s
            timeout: 5s
            retries: 15
            start_period: 5s
        networks:
            - readmanga

volumes:
    pgdata:

networks:
    readmanga:
        driver: bridge
